// Generated by view binder compiler. Do not edit!
package com.example.spaceexplorer.ui.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.spaceexplorer.ui.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemLaunchBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final TextView launchDateText;

  @NonNull
  public final TextView missionNameText;

  @NonNull
  public final TextView rocketNameText;

  @NonNull
  public final ImageView statusIcon;

  private ItemLaunchBinding(@NonNull MaterialCardView rootView, @NonNull TextView launchDateText,
      @NonNull TextView missionNameText, @NonNull TextView rocketNameText,
      @NonNull ImageView statusIcon) {
    this.rootView = rootView;
    this.launchDateText = launchDateText;
    this.missionNameText = missionNameText;
    this.rocketNameText = rocketNameText;
    this.statusIcon = statusIcon;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemLaunchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemLaunchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_launch, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemLaunchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.launchDateText;
      TextView launchDateText = ViewBindings.findChildViewById(rootView, id);
      if (launchDateText == null) {
        break missingId;
      }

      id = R.id.missionNameText;
      TextView missionNameText = ViewBindings.findChildViewById(rootView, id);
      if (missionNameText == null) {
        break missingId;
      }

      id = R.id.rocketNameText;
      TextView rocketNameText = ViewBindings.findChildViewById(rootView, id);
      if (rocketNameText == null) {
        break missingId;
      }

      id = R.id.statusIcon;
      ImageView statusIcon = ViewBindings.findChildViewById(rootView, id);
      if (statusIcon == null) {
        break missingId;
      }

      return new ItemLaunchBinding((MaterialCardView) rootView, launchDateText, missionNameText,
          rocketNameText, statusIcon);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
