// Generated by view binder compiler. Do not edit!
package com.example.spaceexplorer.ui.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.spaceexplorer.ui.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentLaunchDetailsBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final MaterialButton articleButton;

  @NonNull
  public final TextView errorText;

  @NonNull
  public final TextView launchDateText;

  @NonNull
  public final MaterialCardView linksCard;

  @NonNull
  public final TextView missionNameText;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final MaterialCardView rocketCard;

  @NonNull
  public final TextView rocketDescriptionText;

  @NonNull
  public final TextView rocketNameText;

  @NonNull
  public final MaterialCardView statusCard;

  @NonNull
  public final TextView statusLabel;

  @NonNull
  public final TextView statusText;

  @NonNull
  public final MaterialButton webcastButton;

  private FragmentLaunchDetailsBinding(@NonNull NestedScrollView rootView,
      @NonNull MaterialButton articleButton, @NonNull TextView errorText,
      @NonNull TextView launchDateText, @NonNull MaterialCardView linksCard,
      @NonNull TextView missionNameText, @NonNull ProgressBar progressBar,
      @NonNull MaterialCardView rocketCard, @NonNull TextView rocketDescriptionText,
      @NonNull TextView rocketNameText, @NonNull MaterialCardView statusCard,
      @NonNull TextView statusLabel, @NonNull TextView statusText,
      @NonNull MaterialButton webcastButton) {
    this.rootView = rootView;
    this.articleButton = articleButton;
    this.errorText = errorText;
    this.launchDateText = launchDateText;
    this.linksCard = linksCard;
    this.missionNameText = missionNameText;
    this.progressBar = progressBar;
    this.rocketCard = rocketCard;
    this.rocketDescriptionText = rocketDescriptionText;
    this.rocketNameText = rocketNameText;
    this.statusCard = statusCard;
    this.statusLabel = statusLabel;
    this.statusText = statusText;
    this.webcastButton = webcastButton;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLaunchDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLaunchDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_launch_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLaunchDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.articleButton;
      MaterialButton articleButton = ViewBindings.findChildViewById(rootView, id);
      if (articleButton == null) {
        break missingId;
      }

      id = R.id.errorText;
      TextView errorText = ViewBindings.findChildViewById(rootView, id);
      if (errorText == null) {
        break missingId;
      }

      id = R.id.launchDateText;
      TextView launchDateText = ViewBindings.findChildViewById(rootView, id);
      if (launchDateText == null) {
        break missingId;
      }

      id = R.id.linksCard;
      MaterialCardView linksCard = ViewBindings.findChildViewById(rootView, id);
      if (linksCard == null) {
        break missingId;
      }

      id = R.id.missionNameText;
      TextView missionNameText = ViewBindings.findChildViewById(rootView, id);
      if (missionNameText == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.rocketCard;
      MaterialCardView rocketCard = ViewBindings.findChildViewById(rootView, id);
      if (rocketCard == null) {
        break missingId;
      }

      id = R.id.rocketDescriptionText;
      TextView rocketDescriptionText = ViewBindings.findChildViewById(rootView, id);
      if (rocketDescriptionText == null) {
        break missingId;
      }

      id = R.id.rocketNameText;
      TextView rocketNameText = ViewBindings.findChildViewById(rootView, id);
      if (rocketNameText == null) {
        break missingId;
      }

      id = R.id.statusCard;
      MaterialCardView statusCard = ViewBindings.findChildViewById(rootView, id);
      if (statusCard == null) {
        break missingId;
      }

      id = R.id.statusLabel;
      TextView statusLabel = ViewBindings.findChildViewById(rootView, id);
      if (statusLabel == null) {
        break missingId;
      }

      id = R.id.statusText;
      TextView statusText = ViewBindings.findChildViewById(rootView, id);
      if (statusText == null) {
        break missingId;
      }

      id = R.id.webcastButton;
      MaterialButton webcastButton = ViewBindings.findChildViewById(rootView, id);
      if (webcastButton == null) {
        break missingId;
      }

      return new FragmentLaunchDetailsBinding((NestedScrollView) rootView, articleButton, errorText,
          launchDateText, linksCard, missionNameText, progressBar, rocketCard,
          rocketDescriptionText, rocketNameText, statusCard, statusLabel, statusText,
          webcastButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
